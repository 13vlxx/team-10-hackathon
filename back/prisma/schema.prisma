// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model user {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model scenario {
  id                    String         @id @default(cuid())
  name                  String
  description           String
  imageUrl              String
  difficulty            Int
  scenarioNodes         scenarioNode[]
  initialScenarioNode   scenarioNode?  @relation(name: "InitialNode", fields: [initialScenarioNodeId], references: [id])
  initialScenarioNodeId String?        @unique
}

model scenarioNode {
  id                 String         @id @default(cuid())
  imageUrl           String
  description        String
  responses          response[]     @relation(name: "Parent")
  dashboardNode      dashboardNode?
  response           response[]
  scenario           scenario?      @relation(fields: [scenarioId], references: [id])
  scenarioId         String?        @unique
  initialForScenario scenario?      @relation(name: "InitialNode")
}

model dashboardNode {
  id             String       @id @default(cuid())
  scenarioNodeId String       @unique
  data           scenarioNode @relation(fields: [scenarioNodeId], references: [id])
  x              Float
  y              Float

  from edge[]
  to   edge[] @relation(name: "target")
}

model edge {
  id       String        @id @default(cuid())
  target   dashboardNode @relation(fields: [targetId], references: [id], name: "target")
  targetId String
  source   dashboardNode @relation(fields: [sourceId], references: [id])
  sourceId String
}

model response {
  id                 String @id @default(cuid())
  description        String
  effectDescription  String
  healthPointsImpact Int
  wisePointsImpact   Int

  scenarioNodeParent   scenarioNode @relation(fields: [scenarioNodeParentId], references: [id], name: "Parent")
  scenarioNodeParentId String

  scenarioNodeChild   scenarioNode @relation(fields: [scenarioNodeChildId], references: [id])
  scenarioNodeChildId String
}
